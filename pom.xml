<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>au.id.raboczi.cornerstone</groupId>
  <artifactId>parent</artifactId>
  <version>0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Cornerstone</name>
  <description>A sample application.</description>
  <inceptionYear>2019</inceptionYear>

  <modules>
    <module>service</module>
    <module>service-api</module>
    <module>test-service</module>
    <module>test-service-api</module>
    <module>test-service-zk</module>
    <module>test-war</module>
    <module>user-service</module>
    <module>user-service-api</module>
    <module>user-service-zk</module>
    <module>zk</module>
    <module>zk-event-queue-provider</module>

    <module>itest</module>
    <module>dist</module>  <!-- Must go last, because Maven is unaware of dependencies within feature.xml -->
  </modules>

  <properties>
    <java.source.version>1.8</java.source.version>
    <java.target.version>${java.source.version}</java.target.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Artifact versions -->
    <checkerframework.version>3.1.0</checkerframework.version>
    <karaf.version>4.3.0.RC1</karaf.version>
    <osgi.version>7.0.0</osgi.version>
    <pax-web.version>7.2.14</pax-web.version>  <!-- this should match whatever is bundled with ${karaf.version} -->
    <servlet-api.version>3.1.0</servlet-api.version>  <!-- This version of the Servlet API is specified by OSGi R7 Compendium section 140.1 "HTTP Whiteboard Specification" 1.1 -->
    <surefire.argLine/>
    <zk.version>9.0.0</zk.version>  <!-- usually the same as zk.version.osgi unless there's qualifier, e.g. 9.0.0-SNAPSHOT -->
    <zk.version.osgi>9.0.0</zk.version.osgi>  <!-- usually the same as zk.version unless there's a qualifier, e.g. 9.0.0.SNAPSHOT -->
    <zk.version.range>[9.0,10)</zk.version.range>
  </properties>

  <licenses>
    <license>
      <name>GNU Lesser General Public License, Version 3.0</name>
      <url>http://www.gnu.org/licenses/lgpl-3.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>raboczi</id>
      <name>Simon Raboczi</name>
      <url>https://github.com/raboczi</url>
      <roles>
        <role>developer</role>
      </roles>
      <timezone>Australia/Brisbane</timezone>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/raboczi/cornerstone.git</connection>
    <developerConnection>scm:git:ssh://github.com:raboczi/cornerstone.git</developerConnection>
    <url>https://github.com/raboczi/cornerstone/tree/master</url>
  </scm>

  <build>
    <defaultGoal>install</defaultGoal>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <version>4.2.1</version>
          <extensions>true</extensions>
          <inherited>true</inherited>
          <executions>
            <execution>
              <id>bundle-manifest</id>
              <phase>process-classes</phase>
              <goals>
                <goal>manifest</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <archive>
              <forced>true</forced>
            </archive>
            <instructions>
              <Bundle-Category>cornerstone</Bundle-Category>  <!-- https://www.osgi.org/developer/specifications/reference/#Referencecategories -->
              <Import-Package>
                !org.checkerframework.checker.*,
                *
              </Import-Package>
            </instructions>
            <niceManifest>true</niceManifest>
            <supportedProjectTypes>
              <supportedProjectType>bundle</supportedProjectType>
              <supportedProjectType>jar</supportedProjectType>
              <supportedProjectType>pom</supportedProjectType>
              <supportedProjectType>war</supportedProjectType>
            </supportedProjectTypes>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.karaf.tooling</groupId>
          <artifactId>karaf-maven-plugin</artifactId>
          <version>${karaf.version}</version>
          <extensions>true</extensions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0-M3</version>
          <executions>
            <execution>
              <id>enforce-common-rules</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <banDuplicatePomDependencyVersions/>
                  <dependencyConvergence/>
                  <reactorModuleConvergence/>
                  <requireJavaVersion>
                    <version>${java.source.version}</version>
                  </requireJavaVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.1.1</version>
          <configuration>
            <!-- <additionalOptions>-html5</additionalOptions>  Option only supported in JDK 9+ -->
            <docfilessubdirs>true</docfilessubdirs>
            <links>
              <link>https://docs.oracle.com/javase/9/docs/api</link> <!-- TODO: update to current JDK once Oracle fixes their package-list -->
              <link>https://docs.oracle.com/javaee/7/api</link>
              <link>https://osgi.org/javadoc/r6/core</link>
              <link>https://osgi.org/javadoc/r6/cmpn</link>
              <link>https://www.zkoss.org/javadoc/${zk.version}/zk</link>
            </links>
            <overview>src/javadoc/overview.html</overview>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.8.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.2</version>
          <configuration>
            <forkMode>once</forkMode>
            <argLine>${surefire.argLine}</argLine>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.3</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>2.0.0</version>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.5</version>
        </plugin>

        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>4.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.1.0</version>
        <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>8.29</version>
            </dependency>
          </dependencies>
        <executions>
          <execution>
            <id>validate</id>
            <phase>process-sources</phase>
            <configuration>
              <configLocation>src/checkstyle/checkstyle.xml</configLocation>
              <encoding>UTF-8</encoding>
              <consoleOutput>true</consoleOutput>
              <failsOnError>true</failsOnError>
              <linkXRef>false</linkXRef>
              <suppressionsLocation>src/checkstyle/checkstyle-suppressions.xml</suppressionsLocation>
            </configuration>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!-- This plugin will set properties values using dependency information -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>properties</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>  <!-- http://www.mojohaus.org/license-maven-plugin/examples/example-thirdparty.html -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <configuration>
          <licenseName>lgpl_v3</licenseName>
          <organizationName>Simon Raboczi</organizationName>
          <useMissingFile>true</useMissingFile>
          <useRepositoryMissingFiles>true</useRepositoryMissingFiles>
          <includes>
            <include>**/*.java</include>
          </includes>
          <!-- Because package doc comments precede the package declaration, the license plugin's remove-file-header goal breaks them. -->
          <excludes>
            <exclude>**/package-info.java</exclude>
          </excludes>
          <licenseMerges>
            <licenseMerge>Apache v2|The Apache Software License, Version 2.0|Apache License, Version 2.0|Apache License, version 2.0|Apache License 2.0|Apache 2.0 License|Apache 2.0|Apache 2|ALv2</licenseMerge>
            <licenseMerge>BSD|BSD License|New BSD License|The BSD License|BSD 3-clause New License</licenseMerge>
            <licenseMerge>CDDL 1.1|Common Development and Distribution License</licenseMerge>
            <licenseMerge>CDDL/GPLv2+CE|CDDL + GPLv2 with classpath exception</licenseMerge>
            <licenseMerge>Eclipse Distribution v1|Eclipse Distribution License - v 1.0|Eclipse Distribution License v. 1.0|EDL 1.0</licenseMerge>
            <licenseMerge>Eclipse Public v1.0|Eclipse Public License - v 1.0|Eclipse Public License</licenseMerge>
            <licenseMerge>GPL2 w/ CPE|GNU General Public License, Version 2 with the Classpath Exception</licenseMerge>
            <licenseMerge>LGPL|GNU LESSER GENERAL PUBLIC LICENSE</licenseMerge>
            <licenseMerge>LGPL v2.1|LGPL, version 2.1</licenseMerge>
            <licenseMerge>LGPL v3|GNU Lesser General Public License, Version 3.0|GNU LESSER GENERAL PUBLIC LICENSE, Version 3|lgpl_v3</licenseMerge>
            <licenseMerge>MIT License|The MIT License</licenseMerge>
          </licenseMerges>
        </configuration>
        <executions>
          <execution>
            <id>update-file-header</id>
            <goals>
              <goal>update-file-header</goal>
            </goals>
            <phase>process-sources</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <executions>
          <execution>
            <id>get-the-git-infos</id>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <generateGitPropertiesFilename>${project.build.outputDirectory}/META-INF/git.properties</generateGitPropertiesFilename>
          <includeOnlyProperties>
            <includeOnlyProperty>git.branch</includeOnlyProperty>
            <includeOnlyProperty>git.build.version</includeOnlyProperty>
            <includeOnlyProperty>git.closest.tag.name</includeOnlyProperty>
            <includeOnlyProperty>git.commit.id</includeOnlyProperty>
            <includeOnlyProperty>git.dirty</includeOnlyProperty>
            <includeOnlyProperty>git.remote.origin.url</includeOnlyProperty>
            <includeOnlyProperty>git.tags</includeOnlyProperty>
            <includeOnlyProperty>git.total.commit.count</includeOnlyProperty>
          </includeOnlyProperties>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.reactivex.rxjava3</groupId>
        <artifactId>rxjava</artifactId>
        <version>3.0.0-RC7</version>
      </dependency>

      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>${servlet-api.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.13</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.ops4j.pax.web</groupId>
        <artifactId>pax-web-extender-war</artifactId>
        <version>${pax-web.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>osgi.annotation</artifactId>
        <version>${osgi.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>osgi.cmpn</artifactId>
        <version>${osgi.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>osgi.core</artifactId>
        <version>${osgi.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.25</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.zkoss.zk</groupId>
        <artifactId>zk</artifactId>
        <version>${zk.version}</version>
      </dependency>

      <dependency>
        <groupId>org.zkoss.zk</groupId>
        <artifactId>zul</artifactId>
        <version>${zk.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.checkerframework</groupId>
      <artifactId>checker-qual</artifactId>
      <version>${checkerframework.version}</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>checkerframework-jdk8</id>
      <activation>
        <jdk>[1.8,11)</jdk>
      </activation>

      <properties>
        <annotatedJdk>${org.checkerframework:jdk8:jar}</annotatedJdk>
        <errorProneJavac>${com.google.errorprone:javac:jar}</errorProneJavac>
      </properties>

      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <configuration>
                <fork>true</fork>
                <source>${java.source.version}</source>
                <target>${java.target.version}</target>
                <!-- If using JDK 11, remove source and target and uncomment "release" below. -->
                <!--<release>11</release>-->
                <compilerArguments>
                  <Xmaxerrs>10000</Xmaxerrs>
                  <Xmaxwarns>10000</Xmaxwarns>
                </compilerArguments>
                <annotationProcessorPaths>
                  <path>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>checker</artifactId>
                    <version>${checkerframework.version}</version>
                  </path>
                </annotationProcessorPaths>
                <annotationProcessors>
                  <!-- Add all the checkers you want to enable here -->
                  <!-- <annotationProcessor>org.checkerframework.checker.formatter.FormatChecker</annotationProcessor> -->
                  <annotationProcessor>org.checkerframework.checker.i18n.I18nChecker</annotationProcessor>
                  <annotationProcessor>org.checkerframework.checker.i18nformatter.I18nFormatterChecker</annotationProcessor>
                  <annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>
                  <!-- <annotationProcessor>org.checkerframework.checker.signature.SignatureChecker</annotationProcessor> -->
                </annotationProcessors>
                <compilerArgs>
                  <!-- If using JDK 8, use only the two arguments immediately below. -->
                  <arg>-J-Xbootclasspath/p:${errorProneJavac}</arg>
                  <arg>-Xbootclasspath/p:${annotatedJdk}</arg>
                  <!-- If using JDK 11, remove the two arguments above, remove the
                       space in the one below, and uncomment it. -->
                  <!-- <arg>-J- -add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg> -->

                  <!-- Our local annotation stubs for third-party libraries -->
                  <arg>-Astubs=${project.parent.basedir}/src/checkerframework</arg>
                  <arg>-AstubWarnIfNotFound</arg>

                  <arg>-Apropfiles=${i18n.propfiles}</arg>

                  <!-- Optionally, -Awarns turns type-checking errors into warnings. -->
                  <!-- <arg>-Awarns</arg> -->
                </compilerArgs>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>

      <dependencies>
        <dependency>
          <groupId>org.checkerframework</groupId>
          <artifactId>jdk8</artifactId>
          <version>${checkerframework.version}</version>
          <scope>compile</scope>
        </dependency>

        <dependency>
          <groupId>com.google.errorprone</groupId>
          <artifactId>javac</artifactId>
          <version>9+181-r4173-1</version>
          <scope>compile</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>checkerframework-jdk11</id>
      <activation>
        <jdk>[11,)</jdk>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <configuration>
                <fork>true</fork>
<!--
                <source>${java.source.version}</source>
                <target>${java.target.version}</target>
-->
                <!-- If using JDK 11, remove source and target and uncomment "release" below. -->
                <release>11</release>
                <compilerArguments>
                  <Xmaxerrs>10000</Xmaxerrs>
                  <Xmaxwarns>10000</Xmaxwarns>
                </compilerArguments>
                <annotationProcessorPaths>
                  <path>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>checker</artifactId>
                    <version>${checkerframework.version}</version>
                  </path>
                </annotationProcessorPaths>
                <annotationProcessors>
                  <!-- Add all the checkers you want to enable here -->
                  <!-- <annotationProcessor>org.checkerframework.checker.formatter.FormatChecker</annotationProcessor> -->
                  <annotationProcessor>org.checkerframework.checker.i18n.I18nChecker</annotationProcessor>
                  <annotationProcessor>org.checkerframework.checker.i18nformatter.I18nFormatterChecker</annotationProcessor>
                  <annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>
                  <!-- <annotationProcessor>org.checkerframework.checker.signature.SignatureChecker</annotationProcessor> -->
                </annotationProcessors>
                <compilerArgs>
                  <!-- If using JDK 8, use only the two arguments immediately below. -->
<!--
                  <arg>-J-Xbootclasspath/p:${errorProneJavac}</arg>
                  <arg>-Xbootclasspath/p:${annotatedJdk}</arg>
-->
                  <!-- If using JDK 11, remove the two arguments above, remove the
                       space in the one below, and uncomment it. -->
                  <!-- <arg>-J- -add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg> -->
                  <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>

                  <!-- Our local annotation stubs for third-party libraries -->
                  <arg>-Astubs=${project.parent.basedir}/src/checkerframework</arg>
                  <arg>-AstubWarnIfNotFound</arg>

                  <arg>-Apropfiles=${i18n.propfiles}</arg>

                  <!-- Optionally, -Awarns turns type-checking errors into warnings. -->
                  <!-- <arg>-Awarns</arg> -->
                </compilerArgs>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>

    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
           <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-release-rules</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireReleaseDeps/>
                    <requireReleaseVersion/>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>  <!-- Generate per-artifact Javadoc -->
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>default-prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>default-report</id>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
              <execution>
                <id>default-check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <rules>
                    <rule>
                      <element>BUNDLE</element>
                      <limits>
                        <!--
                        <limit>
                          <counter>COMPLEXITY</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>0.60</minimum>
                        </limit>
                        -->
                      </limits>
                    </rule>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>pl.project13.maven</groupId>
            <artifactId>git-commit-id-plugin</artifactId>
            <executions>
              <execution>
                <id>validate-the-git-infos</id>
                <goals>
                  <goal>validateRevision</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
            <configuration>
              <validationProperties>
                <validationProperty>
                  <name>all changes committed to git repository</name>
                  <value>${git.dirty}</value>
                  <shouldMatchTo>false</shouldMatchTo>
                </validationProperty>
              </validationProperties>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>java9-plus</id>
      <properties>
        <surefire.argLine>
          --add-opens java.base/java.security=ALL-UNNAMED
          --add-opens java.base/java.net=ALL-UNNAMED
          --add-opens java.base/java.lang=ALL-UNNAMED
          --add-opens java.base/java.util=ALL-UNNAMED
          --add-opens java.naming/javax.naming.spi=ALL-UNNAMED
          --add-opens java.rmi/sun.rmi.transport.tcp=ALL-UNNAMED
        </surefire.argLine>
      </properties>
      <activation>
        <jdk>[9,)</jdk>
      </activation>
    </profile>
  </profiles>
</project>
