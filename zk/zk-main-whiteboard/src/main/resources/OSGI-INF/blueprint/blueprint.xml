<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0">

    <!-- ZK listener for cleanup when a session is destroyed -->
    <service id="http-session-listener">
        <interfaces>
            <value>javax.servlet.ServletContextAttributeListener</value>
            <value>javax.servlet.ServletContextListener</value>
            <value>javax.servlet.ServletRequestAttributeListener</value>
            <value>javax.servlet.http.HttpSessionAttributeListener</value>
            <value>javax.servlet.http.HttpSessionListener</value>
        </interfaces>
        <service-properties>
            <entry key="osgi.http.whiteboard.listener" value="true"/>
        </service-properties>
        <bean class="org.zkoss.zk.ui.http.HttpSessionListener"/>
    </service>

    <!-- ZK loader for ZUML pages -->
    <service id="layout-service" interface="javax.servlet.Servlet" activation="eager" depends-on="http-session-listener">
        <service-properties>
            <entry key="osgi.http.whiteboard.servlet.pattern" value="*.zul"/>
            <entry key="osgi.http.whiteboard.servlet.name" value="zkLoader"/>
            <entry key="servlet.init.log-level" value="DEBUG"/>
            <entry key="servlet.init.update-uri" value="/zkau"/>
        </service-properties>
        <bean class="org.zkoss.zk.ui.http.DHtmlLayoutServlet"/>
    </service>

    <!-- The asynchronous update engine for ZK -->
    <service interface="javax.servlet.Servlet" depends-on="layout-service">
        <service-properties>
            <entry key="osgi.http.whiteboard.servlet.pattern" value="/zkau/*"/>
            <entry key="osgi.http.whiteboard.servlet.name" value="auEngine"/>
        </service-properties>
        <bean class="org.zkoss.zk.au.http.DHtmlUpdateServlet"/>
    </service>

    <!-- Resource service -->
    <service interface="java.io.Serializable">
        <service-properties>
            <entry key="osgi.http.whiteboard.resource.pattern" value="/res/*"/>
            <entry key="osgi.http.whiteboard.resource.prefix"  value="/res"/>
        </service-properties>
        <bean class="java.lang.String"/>
    </service>

</blueprint>
